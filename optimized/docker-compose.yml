version: '3.8'

services:
  # API Server
  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - ./logs:/app/logs
      - ./models:/app/models
      - ./datasets:/app/datasets
    environment:
      - APP_ENV=production
      - HOST=0.0.0.0
      - PORT=8000
      - LOG_LEVEL=INFO
      - MODEL_DEVICE=cpu
      - DATABASE_URL=${DATABASE_URL:-mongodb://mongo:27017/egen_security}
    depends_on:
      - mongo
    networks:
      - egen_network
    command: python main.py --api-only

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://api:8000
    depends_on:
      - api
    networks:
      - egen_network

  # Database
  mongo:
    image: mongo:5.0
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-password}
    networks:
      - egen_network

  # Security Scanner Service
  scanner:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./:/app
      - ./logs:/app/logs
      - scan_data:/app/scan_data
    environment:
      - APP_ENV=production
      - LOG_LEVEL=INFO
      - DATABASE_URL=${DATABASE_URL:-mongodb://mongo:27017/egen_security}
    depends_on:
      - mongo
    networks:
      - egen_network
    command: python -m src.security.scanner_service

  # NGINX Reverse Proxy
  nginx:
    image: nginx:1.21
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./client/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./client/build:/usr/share/nginx/html
      - ./logs/nginx:/var/log/nginx
      - ./certs:/etc/nginx/certs
    depends_on:
      - api
      - client
    networks:
      - egen_network

volumes:
  mongo_data:
  scan_data:

networks:
  egen_network:
    driver: bridge 